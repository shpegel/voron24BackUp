#PID_CALIBRATE HEATER=iDryer_U1_Heater TARGET=100

#==================================================
#=====================CONFIG=======================
#==================================================
[heater_generic iDryer_U1_Heater]
heater_pin: iDryer:H_U1
max_power: 1
sensor_type: NTC 100K MGB18-104F39050L32 #Generic 3950
sensor_pin: iDryer:T_U1
control: pid
pwm_cycle_time: 0.3
min_temp: 0
max_temp: 125
pid_Kp=29.625
pid_Ki=0.945
pid_Kd=232.186


[verify_heater iDryer_U1_Heater]
max_error: 240
check_gain_time: 120
heating_gain: 1


[heater_fan Fan_U1]
fan_speed: 1
pin: iDryer:FAN_U1
heater: iDryer_U1_Heater
heater_temp: 55

#==================================================
#=======================SHT========================
#==================================================
[temperature_sensor iDryer_U1_Air]
sensor_type: SHT3X
# if your iDryer is used as a second MCU uncomment:
i2c_mcu: iDryer
i2c_bus: i2c0f
i2c_address: 68 # 68 or 69 https://learn.adafruit.com/adafruit-sht31-d-temperature-and-humidity-sensor-breakout/pinouts#changing-the-i2c-address-3175430
# i2c_software_sda_pin: gpio20 #second HW version - green PCB | i2c_software_sda_pin: gpio18 #first HW version - red PCB
# i2c_software_scl_pin: gpio21 #second HW version - green PCB | # i2c_software_scl_pin: gpio19 #first HW version - red PCB

[gcode_macro HUMIDITY_QUERY_IDRYER_U1]
gcode:
    {action_respond_info("U1 Humidity  %.2f%%" %(printer["sht3x iDryer_U1_Air"].humidity))}


[gcode_macro QUERY_IDRYER_U1]
# [gcode_macro SHOW]
gcode:
    {action_respond_info("U1 temperature: %.2f C, Humidity: %.2f%%" % (
        printer["sht3x iDryer_U1_Air"].temperature,
        printer["sht3x iDryer_U1_Air"].humidity))}

#==================================================
#=====================BME280=======================
#==================================================
# [temperature_sensor iDryer_U1_Air]
# sensor_type: BME280
# i2c_mcu: iDryer
# i2c_address: 118 
# i2c_bus: i2c0f


#==================================================
#=====================SERVO========================
# https://www.klipper3d.org/Config_Reference.html?h=temper#servo
#==================================================

[servo srv_U1]
pin: iDryer:SRV_U1
maximum_servo_angle: 180
minimum_pulse_width: 0.00055 #0.00055
maximum_pulse_width: 0.002


[gcode_macro servo_U1]
gcode:
    {% set angle = params.ANGLE|default(90)|int %} 
    SET_SERVO SERVO=srv_U1 ANGLE={angle}
    

[delayed_gcode _TOGGLE_SERVO_U1]
gcode:
    {% set unit_data = printer['gcode_macro DRY_U1'] %}
    {% set servo_angle = unit_data.servo_angle %}
    
    HUMIDITY_QUERY_IDRYER_U1
    {% if servo_angle == printer['gcode_macro DRY_U1'].servo_open_angle %}
        SET_SERVO SERVO=srv_U1 ANGLE={printer['gcode_macro DRY_U1'].servo_closed_angle}
        { action_respond_info("----------SERVO CLOSE ---------- servo_angle  %s" %(servo_angle))}
        
        SET_GCODE_VARIABLE MACRO=DRY_U1 VARIABLE=servo_angle VALUE={printer['gcode_macro DRY_U1'].servo_closed_angle}
        UPDATE_DELAYED_GCODE ID=_TOGGLE_SERVO_U1 DURATION={printer['gcode_macro DRY_U1'].servo_closed_time}
    {% elif servo_angle == printer['gcode_macro DRY_U1'].servo_closed_angle %}
        SET_SERVO SERVO=srv_U1 ANGLE={printer['gcode_macro DRY_U1'].servo_open_angle}
        { action_respond_info("----------SERVO OPEN ---------- servo_angle  %s" %(servo_angle))}
        
        SET_GCODE_VARIABLE MACRO=DRY_U1 VARIABLE=servo_angle VALUE={printer['gcode_macro DRY_U1'].servo_open_angle}
        UPDATE_DELAYED_GCODE ID=_TOGGLE_SERVO_U1 DURATION={printer['gcode_macro DRY_U1'].servo_open_time}
    {% endif %}


#==================================================
#=======================NEOPIXEL===================
# https://www.klipper3d.org/Config_Reference.html?h=temper#neopixel
#==================================================
[neopixel sprd]
pin: iDryer:NEOPIXEL0
chain_count: 4
color_order: GRB
initial_RED: 0.1
initial_GREEN: 0.0
initial_BLUE: 0.0


[gcode_macro SPRD]
gcode:
    {% set R = params.R|default(1.0)|float %} 
    {% set G = params.G|default(0.0)|float %} 
    {% set B = params.B|default(1.0)|float %} 
    {% for i in range(1,5)%}
      SET_LED LED=sprd RED={R} GREEN={G} BLUE={B} WHITE=0 INDEX={i} TRANSMIT=1 SYNC=0
        G4 P1000  
    {% endfor %}


[delayed_gcode LED_SERVICE]
gcode:
    {% set cur_heater_state =   printer['heater_generic iDryer_U1_Heater'].power|float %} 
    {% set cur_fan_state =      printer['heater_fan Fan_U1'].speed|float%} 
    {% set cur_unit_humidity =  printer["sht3x iDryer_U1_Air"].humidity|float%}
    {% set cur_unit_temp =      printer['temperature_sensor iDryer_U1_Air'].temperature|float%}

    {% if cur_unit_humidity < 20 %}
        {% set humidity_r = 1.0 - (cur_unit_humidity / 20.0) %}
        {% set humidity_g = 1.0 - (cur_unit_humidity / 20.0) %}
        {% set humidity_b = cur_unit_humidity / 20.0 %}
    {% else %}
        {% set humidity_r = 0.0 %}
        {% set humidity_g = 0.0 %}
        {% set humidity_b = (cur_unit_humidity - 20.0) / 80.0 %}
    {% endif %}
    
    {% if cur_fan_state != 1.0 %}
        {% set cur_fan_state = 0.01 %}
    {% endif %}

    {% if cur_unit_temp < 50 %}
        {% set red_intensity = 0.01 %}
    {% else %}
        {% set red_intensity = ((cur_unit_temp - 30) / 70) ** 0.5 %}
        {% set red_intensity = red_intensity if red_intensity <= 1.0 else 1.0 %}
        {% set red_intensity = red_intensity if red_intensity >= 0.01 else 0.01 %}
    {% endif %}

    SET_LED LED=sprd RED={cur_heater_state}     GREEN={0.01}                BLUE={0.01}                 WHITE=0 INDEX={1}   # heater
    SET_LED LED=sprd RED={0.01}                 GREEN={cur_fan_state}       BLUE={0.01}                 WHITE=0 INDEX={2}    # fan
    SET_LED LED=sprd RED={humidity_r}           GREEN={humidity_g}          BLUE={humidity_b}           WHITE=0 INDEX={3}   # humidity
    SET_LED LED=sprd RED={red_intensity}        GREEN={0.01}                BLUE={0.01}                 WHITE=0 INDEX={4} TRANSMIT=1 SYNC=0 # temperature

    UPDATE_DELAYED_GCODE ID=LED_SERVICE DURATION=5


[gcode_macro LED_BLINK]
gcode:
    {% set colors = [
        {'R': 1.0, 'G': 0.0, 'B': 0.0},  
        {'R': 0.0, 'G': 1.0, 'B': 0.0},  
        {'R': 0.0, 'G': 0.0, 'B': 1.0}, 
        {'R': 1.0, 'G': 1.0, 'B': 0.0}   
    ] %}
    
    {% for i in range(blink_count) %}
        {% for j in range(4) %}
            {% set color = colors[j] %}
            SET_LED LED=sprd RED={color.R} GREEN={color.G} BLUE={color.B} WHITE=0 INDEX={j+1} TRANSMIT=1 SYNC=0
            G4 P100; 
            SET_LED LED=sprd RED=0 GREEN=0 BLUE=0 WHITE=0 INDEX={j+1} TRANSMIT=1 SYNC=0
            G4 P100 
        {% endfor %}
    {% endfor %}


[gcode_macro LED_RAINBOW]
gcode:
    {% set num_leds = 4 %} 
    {% set steps = 500 %} 
    {% set delay = 50 %}  

    {% for step in range(steps) %}
        {% for i in range(num_leds) %}
            {% set position = (step * 360 / steps + i * (360 / num_leds)) % 360 %}

            {% if position < 120 %}
                {% set red = 1.0 - position / 120.0 %}
                {% set green = position / 120.0 %}
                {% set blue = 0.0 %}
            {% elif position < 240 %}
                {% set red = 0.0 %}
                {% set green = 1.0 - (position - 120) / 120.0 %}
                {% set blue = (position - 120) / 120.0 %}
            {% else %}
                {% set red = (position - 240) / 120.0 %}
                {% set green = 0.0 %}
                {% set blue = 1.0 - (position - 240) / 120.0 %}
            {% endif %}

            SET_LED LED=sprd RED={red|float} GREEN={green|float} BLUE={blue|float} WHITE=0 INDEX={i+1} TRANSMIT=1 SYNC=0
        {% endfor %}
        G4 P{delay} ;
    {% endfor %}


#========================================================
#=====================iDryer macros======================
#========================================================
[gcode_macro OFF_U1]
gcode:
    UPDATE_DELAYED_GCODE ID=_UPDATE_U1 DURATION=0
    UPDATE_DELAYED_GCODE ID=_TOGGLE_SERVO_U1 DURATION=0
    SET_HEATER_TEMPERATURE HEATER=iDryer_U1_Heater TARGET=0

[delayed_gcode _OFF_U1]
gcode:
    OFF_U1


[gcode_macro PLA_U1]
variable_unit_temp: 55
variable_unit_duration: 180
gcode:
    DRY_U1 UNIT_TEMPERATURE={unit_temp} HUMIDITY=10 TIME={unit_duration}


[gcode_macro PETG_U1]
variable_unit_temp: 65
variable_unit_duration: 240
gcode:
    DRY_U1 UNIT_TEMPERATURE={unit_temp} HUMIDITY=10 TIME={unit_duration}


[gcode_macro TPU_U1]
variable_unit_temp: 60
variable_unit_duration: 300
gcode:
    DRY_U1 UNIT_TEMPERATURE={unit_temp} HUMIDITY=10 TIME={unit_duration}


[gcode_macro ABS_U1]
variable_unit_temp: 80
variable_unit_duration: 240
gcode:
    DRY_U1 UNIT_TEMPERATURE={unit_temp} HUMIDITY=10 TIME={unit_duration}


[gcode_macro PA_U1]
variable_unit_temp: 90
variable_unit_duration: 240
gcode:
    DRY_U1 UNIT_TEMPERATURE={unit_temp} HUMIDITY=10 TIME={unit_duration}


[gcode_macro DRY_U1]
variable_temp: 5
variable_humidity: 5
variable_duration: 5
variable_off_timer_set: 0 
variable_delta_high: 30
variable_servo_angle: 0 #degrees
variable_servo_open_angle: 40 #degrees
variable_servo_closed_angle: 94 #degrees
variable_servo_open_time: 10 #second
variable_servo_closed_time: 300 #second
variable_data: {}
gcode:
    {% set set_unit_temp = params.UNIT_TEMPERATURE|default(40)|int %} 
    {% set set_unit_humidity = params.HUMIDITY|default(10)|int%} 
    {% set set_unit_duration = params.TIME|default(240)|int%}
    
    SET_GCODE_VARIABLE MACRO=DRY_U1 VARIABLE=servo_angle VALUE={servo_closed_angle}
    SET_SERVO SERVO=srv_U1 ANGLE={servo_angle}

    # { action_respond_info(" DRY_U1 ----- [ temp  %s | humidity  %s | duration  %s ] -----" %(set_unit_temp, set_unit_humidity, set_unit_duration) )}

    {action_respond_info("Humidity  %.2f%%" %(printer["sht3x iDryer_U1_Air"].humidity))}
    SET_GCODE_VARIABLE MACRO=DRY_U1 VARIABLE=temp VALUE={set_unit_temp}
    SET_GCODE_VARIABLE MACRO=DRY_U1 VARIABLE=humidity VALUE={set_unit_humidity}
    SET_GCODE_VARIABLE MACRO=DRY_U1 VARIABLE=duration VALUE={set_unit_duration}

    UPDATE_DELAYED_GCODE ID=LED_SERVICE DURATION=1
    UPDATE_DELAYED_GCODE ID=_UPDATE_U1 DURATION=1
    UPDATE_DELAYED_GCODE ID=_TOGGLE_SERVO_U1 DURATION=2


[delayed_gcode _UPDATE_U1]
gcode:
    {% set unit_data = printer['gcode_macro DRY_U1'] %}
    {% set temperature = unit_data.temp %}
    {% set delta_high =  unit_data.delta_high %}
    {% set dry_duration =  unit_data.duration %}
    {% set off_timer_set = unit_data.off_timer_set %} 
    
    # { action_respond_info("Unit_1 T: %s H: %.2f%%" %(temperature, printer["sht3x iDryer_U1_Air"].humidity))}
    
    {% if printer['temperature_sensor iDryer_U1_Air'].temperature|int > temperature|int %}
        {% set target_temp = 0|int %}
    {% elif printer['temperature_sensor iDryer_U1_Air'].temperature|int == temperature|int %}
        {% if off_timer_set == 0 %}
            UPDATE_DELAYED_GCODE ID=_OFF_U1 DURATION={dry_duration * 60}
            SET_GCODE_VARIABLE MACRO=DRY_U1 VARIABLE=off_timer_set VALUE=1
        {% endif %}

        {% set target_temp = printer['temperature_sensor iDryer_U1_Air'].temperature|int %}
    {% elif printer['temperature_sensor iDryer_U1_Air'].temperature|int < temperature|int %}
        {% set target_temp = temperature - printer['temperature_sensor iDryer_U1_Air'].temperature + temperature + delta_high%}
        {% if target_temp > temperature + delta_high %} 
            {% set target_temp = temperature|int + delta_high|int %}
        {% endif %}
    {% endif %}
    
    SET_HEATER_TEMPERATURE HEATER=iDryer_U1_Heater TARGET={target_temp|int}
    UPDATE_DELAYED_GCODE ID=_UPDATE_U1 DURATION=1

